package com.ivymon.inventory.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class GoodsInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public GoodsInfoExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGoodsSeqIsNull() {
            addCriterion("GOODS_SEQ is null");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqIsNotNull() {
            addCriterion("GOODS_SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqEqualTo(Integer value) {
            addCriterion("GOODS_SEQ =", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqNotEqualTo(Integer value) {
            addCriterion("GOODS_SEQ <>", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqGreaterThan(Integer value) {
            addCriterion("GOODS_SEQ >", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("GOODS_SEQ >=", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqLessThan(Integer value) {
            addCriterion("GOODS_SEQ <", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqLessThanOrEqualTo(Integer value) {
            addCriterion("GOODS_SEQ <=", value, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqIn(List<Integer> values) {
            addCriterion("GOODS_SEQ in", values, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqNotIn(List<Integer> values) {
            addCriterion("GOODS_SEQ not in", values, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqBetween(Integer value1, Integer value2) {
            addCriterion("GOODS_SEQ between", value1, value2, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("GOODS_SEQ not between", value1, value2, "goodsSeq");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNull() {
            addCriterion("GOODS_NAME is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNotNull() {
            addCriterion("GOODS_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameEqualTo(String value) {
            addCriterion("GOODS_NAME =", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotEqualTo(String value) {
            addCriterion("GOODS_NAME <>", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThan(String value) {
            addCriterion("GOODS_NAME >", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
            addCriterion("GOODS_NAME >=", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThan(String value) {
            addCriterion("GOODS_NAME <", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThanOrEqualTo(String value) {
            addCriterion("GOODS_NAME <=", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLike(String value) {
            addCriterion("GOODS_NAME like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotLike(String value) {
            addCriterion("GOODS_NAME not like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIn(List<String> values) {
            addCriterion("GOODS_NAME in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotIn(List<String> values) {
            addCriterion("GOODS_NAME not in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameBetween(String value1, String value2) {
            addCriterion("GOODS_NAME between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotBetween(String value1, String value2) {
            addCriterion("GOODS_NAME not between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andItemSeqIsNull() {
            addCriterion("ITEM_SEQ is null");
            return (Criteria) this;
        }

        public Criteria andItemSeqIsNotNull() {
            addCriterion("ITEM_SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andItemSeqEqualTo(Integer value) {
            addCriterion("ITEM_SEQ =", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotEqualTo(Integer value) {
            addCriterion("ITEM_SEQ <>", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqGreaterThan(Integer value) {
            addCriterion("ITEM_SEQ >", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("ITEM_SEQ >=", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqLessThan(Integer value) {
            addCriterion("ITEM_SEQ <", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqLessThanOrEqualTo(Integer value) {
            addCriterion("ITEM_SEQ <=", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqIn(List<Integer> values) {
            addCriterion("ITEM_SEQ in", values, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotIn(List<Integer> values) {
            addCriterion("ITEM_SEQ not in", values, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_SEQ between", value1, value2, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_SEQ not between", value1, value2, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andPerQuantityIsNull() {
            addCriterion("PER_QUANTITY is null");
            return (Criteria) this;
        }

        public Criteria andPerQuantityIsNotNull() {
            addCriterion("PER_QUANTITY is not null");
            return (Criteria) this;
        }

        public Criteria andPerQuantityEqualTo(Integer value) {
            addCriterion("PER_QUANTITY =", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityNotEqualTo(Integer value) {
            addCriterion("PER_QUANTITY <>", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityGreaterThan(Integer value) {
            addCriterion("PER_QUANTITY >", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("PER_QUANTITY >=", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityLessThan(Integer value) {
            addCriterion("PER_QUANTITY <", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("PER_QUANTITY <=", value, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityIn(List<Integer> values) {
            addCriterion("PER_QUANTITY in", values, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityNotIn(List<Integer> values) {
            addCriterion("PER_QUANTITY not in", values, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityBetween(Integer value1, Integer value2) {
            addCriterion("PER_QUANTITY between", value1, value2, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andPerQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("PER_QUANTITY not between", value1, value2, "perQuantity");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Integer value) {
            addCriterion("AMOUNT =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Integer value) {
            addCriterion("AMOUNT <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Integer value) {
            addCriterion("AMOUNT >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("AMOUNT >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Integer value) {
            addCriterion("AMOUNT <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Integer value) {
            addCriterion("AMOUNT <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Integer> values) {
            addCriterion("AMOUNT in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Integer> values) {
            addCriterion("AMOUNT not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Integer value1, Integer value2) {
            addCriterion("AMOUNT between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("AMOUNT not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceIsNull() {
            addCriterion("TWD_UNIT_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceIsNotNull() {
            addCriterion("TWD_UNIT_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceEqualTo(Integer value) {
            addCriterion("TWD_UNIT_PRICE =", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceNotEqualTo(Integer value) {
            addCriterion("TWD_UNIT_PRICE <>", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceGreaterThan(Integer value) {
            addCriterion("TWD_UNIT_PRICE >", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("TWD_UNIT_PRICE >=", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceLessThan(Integer value) {
            addCriterion("TWD_UNIT_PRICE <", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceLessThanOrEqualTo(Integer value) {
            addCriterion("TWD_UNIT_PRICE <=", value, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceIn(List<Integer> values) {
            addCriterion("TWD_UNIT_PRICE in", values, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceNotIn(List<Integer> values) {
            addCriterion("TWD_UNIT_PRICE not in", values, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceBetween(Integer value1, Integer value2) {
            addCriterion("TWD_UNIT_PRICE between", value1, value2, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andTwdUnitPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("TWD_UNIT_PRICE not between", value1, value2, "twdUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceIsNull() {
            addCriterion("CURRENCY_UNIT_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceIsNotNull() {
            addCriterion("CURRENCY_UNIT_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceEqualTo(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE =", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceNotEqualTo(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE <>", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceGreaterThan(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE >", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE >=", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceLessThan(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE <", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceLessThanOrEqualTo(Integer value) {
            addCriterion("CURRENCY_UNIT_PRICE <=", value, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceIn(List<Integer> values) {
            addCriterion("CURRENCY_UNIT_PRICE in", values, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceNotIn(List<Integer> values) {
            addCriterion("CURRENCY_UNIT_PRICE not in", values, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceBetween(Integer value1, Integer value2) {
            addCriterion("CURRENCY_UNIT_PRICE between", value1, value2, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andCurrencyUnitPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("CURRENCY_UNIT_PRICE not between", value1, value2, "currencyUnitPrice");
            return (Criteria) this;
        }

        public Criteria andManuSeqIsNull() {
            addCriterion("MANU_SEQ is null");
            return (Criteria) this;
        }

        public Criteria andManuSeqIsNotNull() {
            addCriterion("MANU_SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andManuSeqEqualTo(Integer value) {
            addCriterion("MANU_SEQ =", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqNotEqualTo(Integer value) {
            addCriterion("MANU_SEQ <>", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqGreaterThan(Integer value) {
            addCriterion("MANU_SEQ >", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("MANU_SEQ >=", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqLessThan(Integer value) {
            addCriterion("MANU_SEQ <", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqLessThanOrEqualTo(Integer value) {
            addCriterion("MANU_SEQ <=", value, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqIn(List<Integer> values) {
            addCriterion("MANU_SEQ in", values, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqNotIn(List<Integer> values) {
            addCriterion("MANU_SEQ not in", values, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqBetween(Integer value1, Integer value2) {
            addCriterion("MANU_SEQ between", value1, value2, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andManuSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("MANU_SEQ not between", value1, value2, "manuSeq");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeIsNull() {
            addCriterion("PURCHASE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeIsNotNull() {
            addCriterion("PURCHASE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeEqualTo(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME =", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME <>", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME >", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME >=", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeLessThan(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME <", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("PURCHASE_TIME <=", value, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeIn(List<Date> values) {
            addCriterionForJDBCDate("PURCHASE_TIME in", values, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("PURCHASE_TIME not in", values, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("PURCHASE_TIME between", value1, value2, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andPurchaseTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("PURCHASE_TIME not between", value1, value2, "purchaseTime");
            return (Criteria) this;
        }

        public Criteria andTariffIsNull() {
            addCriterion("TARIFF is null");
            return (Criteria) this;
        }

        public Criteria andTariffIsNotNull() {
            addCriterion("TARIFF is not null");
            return (Criteria) this;
        }

        public Criteria andTariffEqualTo(Integer value) {
            addCriterion("TARIFF =", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffNotEqualTo(Integer value) {
            addCriterion("TARIFF <>", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffGreaterThan(Integer value) {
            addCriterion("TARIFF >", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffGreaterThanOrEqualTo(Integer value) {
            addCriterion("TARIFF >=", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffLessThan(Integer value) {
            addCriterion("TARIFF <", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffLessThanOrEqualTo(Integer value) {
            addCriterion("TARIFF <=", value, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffIn(List<Integer> values) {
            addCriterion("TARIFF in", values, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffNotIn(List<Integer> values) {
            addCriterion("TARIFF not in", values, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffBetween(Integer value1, Integer value2) {
            addCriterion("TARIFF between", value1, value2, "tariff");
            return (Criteria) this;
        }

        public Criteria andTariffNotBetween(Integer value1, Integer value2) {
            addCriterion("TARIFF not between", value1, value2, "tariff");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIsNull() {
            addCriterion("SHIPPING_FEE is null");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIsNotNull() {
            addCriterion("SHIPPING_FEE is not null");
            return (Criteria) this;
        }

        public Criteria andShippingFeeEqualTo(Integer value) {
            addCriterion("SHIPPING_FEE =", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotEqualTo(Integer value) {
            addCriterion("SHIPPING_FEE <>", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeGreaterThan(Integer value) {
            addCriterion("SHIPPING_FEE >", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("SHIPPING_FEE >=", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeLessThan(Integer value) {
            addCriterion("SHIPPING_FEE <", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeLessThanOrEqualTo(Integer value) {
            addCriterion("SHIPPING_FEE <=", value, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeIn(List<Integer> values) {
            addCriterion("SHIPPING_FEE in", values, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotIn(List<Integer> values) {
            addCriterion("SHIPPING_FEE not in", values, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeBetween(Integer value1, Integer value2) {
            addCriterion("SHIPPING_FEE between", value1, value2, "shippingFee");
            return (Criteria) this;
        }

        public Criteria andShippingFeeNotBetween(Integer value1, Integer value2) {
            addCriterion("SHIPPING_FEE not between", value1, value2, "shippingFee");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goods_info
     *
     * @mbg.generated do_not_delete_during_merge Wed Oct 20 10:06:08 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goods_info
     *
     * @mbg.generated Wed Oct 20 10:06:08 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}